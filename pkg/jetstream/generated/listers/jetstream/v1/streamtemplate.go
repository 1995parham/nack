// Copyright 2020 The NATS Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/nats-io/nack/pkg/jetstream/apis/jetstream/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StreamTemplateLister helps list StreamTemplates.
// All objects returned here must be treated as read-only.
type StreamTemplateLister interface {
	// List lists all StreamTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.StreamTemplate, err error)
	// StreamTemplates returns an object that can list and get StreamTemplates.
	StreamTemplates(namespace string) StreamTemplateNamespaceLister
	StreamTemplateListerExpansion
}

// streamTemplateLister implements the StreamTemplateLister interface.
type streamTemplateLister struct {
	indexer cache.Indexer
}

// NewStreamTemplateLister returns a new StreamTemplateLister.
func NewStreamTemplateLister(indexer cache.Indexer) StreamTemplateLister {
	return &streamTemplateLister{indexer: indexer}
}

// List lists all StreamTemplates in the indexer.
func (s *streamTemplateLister) List(selector labels.Selector) (ret []*v1.StreamTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StreamTemplate))
	})
	return ret, err
}

// StreamTemplates returns an object that can list and get StreamTemplates.
func (s *streamTemplateLister) StreamTemplates(namespace string) StreamTemplateNamespaceLister {
	return streamTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StreamTemplateNamespaceLister helps list and get StreamTemplates.
// All objects returned here must be treated as read-only.
type StreamTemplateNamespaceLister interface {
	// List lists all StreamTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.StreamTemplate, err error)
	// Get retrieves the StreamTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.StreamTemplate, error)
	StreamTemplateNamespaceListerExpansion
}

// streamTemplateNamespaceLister implements the StreamTemplateNamespaceLister
// interface.
type streamTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StreamTemplates in the indexer for a given namespace.
func (s streamTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1.StreamTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StreamTemplate))
	})
	return ret, err
}

// Get retrieves the StreamTemplate from the indexer for a given namespace and name.
func (s streamTemplateNamespaceLister) Get(name string) (*v1.StreamTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("streamtemplate"), name)
	}
	return obj.(*v1.StreamTemplate), nil
}
